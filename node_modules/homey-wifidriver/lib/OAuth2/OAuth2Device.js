'use strict';

const WifiDevice = require('./../WifiDevice');

class OAuth2Device extends WifiDevice {

	/**
	 * This method will return an OAuth2 account if present, else it will create it based on
	 * objects from the device store; either temporary or permanent OAuth2 account objects.
	 * @returns {OAuth2Account} OAuth2 account belonging to this device
	 */
	getOAuth2Account() {
		if (this.oauth2Account) return this.oauth2Account;

		// Get temporary OAuth2 account from store if device was just added, else use the permanently added OAuth2 account
		const storedOAuth2Account = this.getStoreValue('tempOAuth2Account') || this.getStoreValue('oauth2Account');
		this.oauth2Account = this.getDriver().oauth2Client.createAccount(storedOAuth2Account);

		// Store OAuth2 account permanently for this device
		this.setStoreValue('oauth2Account', this.oauth2Account);

		// Remove temporary OAuth2 account
		this.unsetStoreValue('tempOAuth2Account');

		return this.oauth2Account;
	}
}

module.exports = OAuth2Device;
