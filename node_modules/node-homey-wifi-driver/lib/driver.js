'use strict';

const Homey = require('homey');

const OAuth2ClientManager = require('./OAuth2/OAuth2ClientManager');
const OAuth2Account = require('./OAuth2/OAuth2Account');

class HomeyWifiDriver extends Homey.Driver {

	onInit(options) {
		options = options || {};

		// If this driver supports OAuth2
		if (options.oauth2ClientConfig) {
			this.oauth2ClientConfig = options.oauth2ClientConfig;

			if (!(Homey.app.OAuth2ClientManager instanceof OAuth2ClientManager)) Homey.app.OAuth2ClientManager = new OAuth2ClientManager({
				allowMultipleClients: true,
			});

			this.oauth2Client = Homey.app.OAuth2ClientManager.createClient(this.oauth2ClientConfig);

			// Override the onPair method
			this.onPair = this.customOAuth2OnPair.bind(this);
		}
	}

	/**
	 * This method will be called when the user starts pairing a new device,
	 * it executes a OAuth2 flow to retrieve devices linked to the users account.
	 * @param socket
	 */
	customOAuth2OnPair(socket) {
		const oauth2Account = new OAuth2Account(this.oauth2ClientConfig);
		const oauth2Url = oauth2Account.getOAuth2Url();

		console.log('customPARI', oauth2Url, oauth2Account)
		new Homey.CloudOAuth2Callback(oauth2Url)
			.once('url', url => {
				this.log('retrieved authentication url');
				socket.emit('url', url);
			})
			.once('code', code => {
				this.log('retrieved authentication code');

				// Fetch access tokens
				oauth2Account.getAccessTokens(code)
					.then(() => socket.emit('authorized'))
					.catch(err => {
						this.error(err.stack);
						socket.emit('error', err.message);
					});
			})
			.generate();

		socket.on('list_devices', (data, callback) => {
			data = data || {};

			console.log(oauth2Account)

			// Put tokens in data object
			data.oauth2Account = oauth2Account;

			// Call driver to ask for devices list
			this.onPairOAuth2ListDevices(data)
				.then(devices => callback(null, devices || []))
				.catch(err => {
					this.error(err.stack);
					return callback(err);
				});
		});
		socket.on('disconnect', () => {
			oauth2Account.destroy();
		})
	}
}

module.exports = HomeyWifiDriver;